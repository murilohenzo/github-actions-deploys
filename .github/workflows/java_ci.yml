name: Workflow Java - SpringBoot
run-name: Build ${{ github.run_number }}

on:
  push:
    branches: [ "master", "main", "feature/*", "f/*", "hotfix/*" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "master", "main" ]

concurrency: pipeline
env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'corretto'
  WORKING_DIRECTORY: '.'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Validate Branch
        run: |
          current_branch=$(echo "${GITHUB_REF#refs/heads/}")
          echo $current_branch
          if [[ "$current_branch" != "master" && "$current_branch" != "main" && ! "$current_branch" =~ ^(f/|feature/|hotfix/) ]]; then
            echo "Error: Invalid branch name. Branch names must start with 'f/', 'feature/', or 'hotfix/'."
            exit 1
          fi
        shell: bash

      - name: Build
        run: mvn clean install -DskipTests
        working-directory: ${{ env.WORKING_DIRECTORY }}

  unit-tests:
    runs-on: ubuntu-latest
    needs: [setup, build]
    steps:
      - name: Unit Tests
        run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.11:prepare-agent test org.apache.maven.plugins:maven-surefire-report-plugin:3.2.5:report org.jacoco:jacoco-maven-plugin:0.8.11:report
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Code Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=${{ vars.SONAR_ORG_KEY }} \
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName=${{ github.event.repository.name }}
        working-directory: ${{ env.WORKING_DIRECTORY }}

  docker-build:
    runs-on: ubuntu-latest
    needs: [setup, unit-tests]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          image_name="${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}"
          docker build -f docker/Dockerfile -t $image_name:latest .
          docker push $image_name:latest
        working-directory: ${{ env.WORKING_DIRECTORY }}
